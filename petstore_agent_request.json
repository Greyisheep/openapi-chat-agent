{
  "name": "Petstore Agent",
  "openapi_spec": {
    "openapi": "3.0.0",
    "info": {
      "title": "Swagger Petstore",
      "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "apiteam@swagger.io"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://petstore.swagger.io/v2",
        "description": "Petstore API server"
      }
    ],
    "paths": {
      "/pet": {
        "post": {
          "tags": ["pet"],
          "summary": "Add a new pet to the store",
          "description": "",
          "operationId": "addPet",
          "requestBody": {
            "description": "Pet object that needs to be added to the store",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            },
            "required": true
          },
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          },
          "security": [
            {
              "petstore_auth": ["write:pets", "read:pets"]
            }
          ]
        },
        "put": {
          "tags": ["pet"],
          "summary": "Update an existing pet",
          "description": "",
          "operationId": "updatePet",
          "requestBody": {
            "description": "Pet object that needs to be added to the store",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            },
            "required": true
          },
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Pet not found"
            },
            "405": {
              "description": "Validation exception"
            }
          },
          "security": [
            {
              "petstore_auth": ["write:pets", "read:pets"]
            }
          ]
        }
      },
      "/pet/{petId}": {
        "get": {
          "tags": ["pet"],
          "summary": "Find pet by ID",
          "description": "Returns a single pet",
          "operationId": "getPetById",
          "parameters": [
            {
              "name": "petId",
              "in": "path",
              "description": "ID of pet to return",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/Pet"
                  }
                },
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Pet not found"
            }
          },
          "security": [
            {
              "api_key": []
            }
          ]
        },
        "delete": {
          "tags": ["pet"],
          "summary": "Deletes a pet",
          "description": "",
          "operationId": "deletePet",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "description": "",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "petId",
              "in": "path",
              "description": "Pet id to delete",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Pet not found"
            }
          },
          "security": [
            {
              "petstore_auth": ["write:pets", "read:pets"]
            }
          ]
        }
      },
      "/store/inventory": {
        "get": {
          "tags": ["store"],
          "summary": "Returns pet inventories by status",
          "description": "Returns a map of status codes to quantities",
          "operationId": "getInventory",
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "api_key": []
            }
          ]
        }
      },
      "/user": {
        "post": {
          "tags": ["user"],
          "summary": "Create user",
          "description": "This can only be done by the logged in user.",
          "operationId": "createUser",
          "requestBody": {
            "description": "Created user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "required": true
          },
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Pet": {
          "type": "object",
          "required": ["name", "photoUrls"],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "category": {
              "$ref": "#/components/schemas/Category"
            },
            "name": {
              "type": "string",
              "example": "doggie"
            },
            "photoUrls": {
              "type": "array",
              "xml": {
                "wrapped": true
              },
              "items": {
                "type": "string",
                "xml": {
                  "name": "photoUrl"
                }
              }
            },
            "tags": {
              "type": "array",
              "xml": {
                "wrapped": true
              },
              "items": {
                "$ref": "#/components/schemas/Tag"
              }
            },
            "status": {
              "type": "string",
              "description": "pet status in the store",
              "enum": ["available", "pending", "sold"]
            }
          },
          "xml": {
            "name": "Pet"
          }
        },
        "Category": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            }
          },
          "xml": {
            "name": "Category"
          }
        },
        "Tag": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            }
          },
          "xml": {
            "name": "Tag"
          }
        },
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "username": {
              "type": "string"
            },
            "firstName": {
              "type": "string"
            },
            "lastName": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "userStatus": {
              "type": "integer",
              "description": "User Status",
              "format": "int32"
            }
          },
          "xml": {
            "name": "User"
          }
        }
      }
    }
  },
  "user_api_key": "special-key",
  "api_base_url": "https://petstore.swagger.io/v2",
  "user_instructions": "You are a helpful assistant for managing a pet store. You can help users find pets, add new pets, update pet information, check store inventory, and manage user accounts. Be friendly and helpful when interacting with users."
}

