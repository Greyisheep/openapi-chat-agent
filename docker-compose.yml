services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-openapi_chat_agent}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped

  # Main API Application
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      # API Configuration
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
      # Security Configuration
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - REFRESH_TOKEN_EXPIRE_DAYS=${REFRESH_TOKEN_EXPIRE_DAYS:-7}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-12}
      - JWT_ISSUER=${JWT_ISSUER:-openapi-chat-agent}
      - JWT_AUDIENCE=${JWT_AUDIENCE:-openapi-chat-agent-users}
      
      # Database Configuration
      - DATABASE_URL=${DATABASE_URL}
      - DATABASE_ECHO=${DATABASE_ECHO:-false}
      
      # Google ADK Configuration
      - ADK_MODEL_PROVIDER=${ADK_MODEL_PROVIDER:-gemini}
      - ADK_MODEL_NAME=${ADK_MODEL_NAME:-gemini-2.5-flash}
      - ADK_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      
      # Platform Configuration
      - PLATFORM_NAME=${PLATFORM_NAME:-OpenAPI Chat Agent}
      - PLATFORM_VERSION=${PLATFORM_VERSION:-1.0.0}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
    volumes:
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  pgadmin_data:
