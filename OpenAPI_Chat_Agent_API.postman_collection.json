{
	"info": {
		"_postman_id": "openapi-chat-agent-api",
		"name": "OpenAPI Chat Agent API",
		"description": "Complete API collection for the OpenAPI Conversational Agent Platform. This collection includes all endpoints for authentication, agent management, marketplace, and health checks.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "openapi-chat-agent"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health",
								""
							]
						},
						"description": "Check the health status of the API"
					},
					"response": []
				}
			],
			"description": "Health check endpoints"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{test_user_email}}\",\n  \"username\": \"{{test_user_username}}\",\n  \"password\": \"{{test_user_password}}\",\n  \"full_name\": \"Test User\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Login (Form)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{test_user_email}}",
									"description": "Email or username"
								},
								{
									"key": "password",
									"value": "{{test_user_password}}"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/auth/token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"token"
							]
						},
						"description": "Login using OAuth2 form data (standard OAuth2 flow)"
					},
					"response": []
				},
				{
					"name": "Login (JSON)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email_or_username\": \"{{test_user_email}}\",\n  \"password\": \"{{test_user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login using JSON body"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"me"
							]
						},
						"description": "Get current user information"
					},
					"response": []
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"newemail@example.com\",\n  \"username\": \"newusername\",\n  \"full_name\": \"New Full Name\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"me"
							]
						},
						"description": "Update current user profile"
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"current_password\": \"{{test_user_password}}\",\n  \"new_password\": \"NewSecurePass456!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/change-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"change-password"
							]
						},
						"description": "Change user password"
					},
					"response": []
				},
				{
					"name": "Set Gemini API Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"gemini_api_key\": \"{{gemini_api_key}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/api-keys/gemini",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"api-keys",
								"gemini"
							]
						},
						"description": "Set user's Gemini API key"
					},
					"response": []
				},
				{
					"name": "Get API Key Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/api-keys",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"api-keys"
							]
						},
						"description": "Get user's API key configuration status"
					},
					"response": []
				},
				{
					"name": "Remove Gemini API Key",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/api-keys/gemini",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"api-keys",
								"gemini"
							]
						},
						"description": "Remove user's Gemini API key"
					},
					"response": []
				},
				{
					"name": "Generate Platform API Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/api-keys/platform/generate",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"api-keys",
								"platform",
								"generate"
							]
						},
						"description": "Generate a platform API key for external use"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						},
						"description": "Logout user by revoking their token"
					},
					"response": []
				}
			],
			"description": "Authentication and user management endpoints"
		},
		{
			"name": "Agents",
			"item": [
				{
					"name": "Create Agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"My API Agent\",\n  \"openapi_spec\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n      \"title\": \"Sample API\",\n      \"version\": \"1.0.0\"\n    },\n    \"paths\": {\n      \"/hello\": {\n        \"get\": {\n          \"summary\": \"Hello endpoint\",\n          \"responses\": {\n            \"200\": {\n              \"description\": \"OK\"\n            }\n          }\n        }\n      }\n    }\n  },\n  \"user_api_key\": \"{{sample_api_key}}\",\n  \"api_base_url\": \"https://api.example.com\",\n  \"user_instructions\": \"You are a helpful assistant for this API.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/agents/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								""
							]
						},
						"description": "Create a new agent with OpenAPI specification"
					},
					"response": []
				},
				{
					"name": "Create Agent from URL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Petstore Agent\",\n  \"openapi_spec_url\": \"https://petstore3.swagger.io/api/v3/openapi.json\",\n  \"user_api_key\": \"{{sample_api_key}}\",\n  \"api_base_url\": \"https://petstore3.swagger.io/api/v3\",\n  \"user_instructions\": \"You are a helpful assistant for the Petstore API.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/agents/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								""
							]
						},
						"description": "Create a new agent using OpenAPI specification URL"
					},
					"response": []
				},
				{
					"name": "List Agents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/agents/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								""
							]
						},
						"description": "List all agents for the current user"
					},
					"response": []
				},
				{
					"name": "Get Agent",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/agents/{{agent_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"{{agent_id}}"
							]
						},
						"description": "Get specific agent information"
					},
					"response": []
				},
				{
					"name": "Chat with Agent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"message\": \"Hello, can you help me with this API?\",\n  \"conversation_id\": \"{{conversation_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/agents/{{agent_id}}/chat",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"{{agent_id}}",
								"chat"
							]
						},
						"description": "Send a message to an agent and get a response"
					},
					"response": []
				},
				{
					"name": "Get Agent Tools",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/agents/{{agent_id}}/tools",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"{{agent_id}}",
								"tools"
							]
						},
						"description": "Get available tools for an agent"
					},
					"response": []
				},
				{
					"name": "Get Agent Conversations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/agents/{{agent_id}}/conversations",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"{{agent_id}}",
								"conversations"
							]
						},
						"description": "Get conversation history for an agent"
					},
					"response": []
				},
				{
					"name": "Get Tool Executions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/agents/{{agent_id}}/tool-executions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"{{agent_id}}",
								"tool-executions"
							]
						},
						"description": "Get tool execution history for an agent"
					},
					"response": []
				},
				{
					"name": "Delete Agent",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/agents/{{agent_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"agents",
								"{{agent_id}}"
							]
						},
						"description": "Delete an agent"
					},
					"response": []
				}
			],
			"description": "Agent management endpoints"
		},
		{
			"name": "Marketplace",
			"item": [
				{
					"name": "List Templates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/marketplace/templates",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"marketplace",
								"templates"
							]
						},
						"description": "List all available agent templates"
					},
					"response": []
				},
				{
					"name": "List Templates with Filters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/marketplace/templates?category=development&featured=true&search=github",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"marketplace",
								"templates"
							],
							"query": [
								{
									"key": "category",
									"value": "development"
								},
								{
									"key": "featured",
									"value": "true"
								},
								{
									"key": "search",
									"value": "github"
								}
							]
						},
						"description": "List templates with category, featured, and search filters"
					},
					"response": []
				},
				{
					"name": "Get Template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/marketplace/templates/{{template_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"marketplace",
								"templates",
								"{{template_id}}"
							]
						},
						"description": "Get specific template details"
					},
					"response": []
				},
				{
					"name": "List Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/marketplace/categories",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"marketplace",
								"categories"
							]
						},
						"description": "List all available agent categories"
					},
					"response": []
				},
				{
					"name": "Create Agent from Template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"agent_name\": \"My GitHub Assistant\",\n  \"api_key\": \"{{sample_api_key}}\",\n  \"custom_instructions\": \"Focus on helping with open source projects and code reviews.\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/marketplace/templates/{{template_id}}/create-agent",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"marketplace",
								"templates",
								"{{template_id}}",
								"create-agent"
							]
						},
						"description": "Create a new agent from a marketplace template"
					},
					"response": []
				}
			],
			"description": "Marketplace and template management endpoints"
		},
		{
			"name": "Root",
			"item": [
				{
					"name": "Root Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Root endpoint with platform information"
					},
					"response": []
				}
			],
			"description": "Root endpoint"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-set Content-Type for JSON requests",
					"if (pm.request.body && pm.request.body.mode === 'raw') {",
					"    pm.request.headers.add({",
					"        key: 'Content-Type',",
					"        value: 'application/json'",
					"    });",
					"}",
					"",
					"// Auto-add Authorization header for protected endpoints",
					"const protectedPaths = ['/auth/me', '/auth/change-password', '/auth/api-keys', '/api/v1/agents', '/marketplace/templates'];",
					"const currentPath = pm.request.url.getPath();",
					"const isProtected = protectedPaths.some(path => currentPath.includes(path));",
					"",
					"if (isProtected && pm.environment.get('access_token')) {",
					"    pm.request.headers.add({",
					"        key: 'Authorization',",
					"        value: 'Bearer ' + pm.environment.get('access_token')",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-extract access token from login responses",
					"if (pm.response.code === 200 || pm.response.code === 201) {",
					"    const responseJson = pm.response.json();",
					"    ",
					"    // Extract token from login responses",
					"    if (responseJson.access_token) {",
					"        pm.environment.set('access_token', responseJson.access_token);",
					"        console.log('✅ Access token automatically set');",
					"    }",
					"    ",
					"    // Extract agent_id from agent creation responses",
					"    if (responseJson.agent_id) {",
					"        pm.environment.set('agent_id', responseJson.agent_id);",
					"        console.log('✅ Agent ID automatically set:', responseJson.agent_id);",
					"    }",
					"    ",
					"    // Extract template_id from template responses",
					"    if (responseJson.id && pm.request.url.getPath().includes('/marketplace/templates/')) {",
					"        pm.environment.set('template_id', responseJson.id);",
					"        console.log('✅ Template ID automatically set:', responseJson.id);",
					"    }",
					"}",
					"",
					"// Validate response structure",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has valid JSON', function () {",
					"    pm.response.to.have.jsonBody();",
					"});",
					"",
					"// Log response for debugging",
					"console.log('Response Status:', pm.response.status);",
					"console.log('Response Time:', pm.response.responseTime + 'ms');"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string",
			"description": "Base URL for the API"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string",
			"description": "JWT access token for authenticated requests (auto-extracted from login)"
		},
		{
			"key": "agent_id",
			"value": "",
			"type": "string",
			"description": "Agent ID for agent-specific requests (auto-extracted from agent creation)"
		},
		{
			"key": "template_id",
			"value": "",
			"type": "string",
			"description": "Template ID for marketplace requests (auto-extracted from template responses)"
		},
		{
			"key": "test_user_email",
			"value": "test@example.com",
			"type": "string",
			"description": "Test user email for automation"
		},
		{
			"key": "test_user_password",
			"value": "TestPass123!",
			"type": "string",
			"description": "Test user password for automation"
		},
		{
			"key": "test_user_username",
			"value": "testuser",
			"type": "string",
			"description": "Test user username for automation"
		},
		{
			"key": "gemini_api_key",
			"value": "",
			"type": "string",
			"description": "Gemini API key for AI features (set this for testing)"
		},
		{
			"key": "sample_api_key",
			"value": "your-api-key-here",
			"type": "string",
			"description": "Sample API key for testing agent creation"
		},
		{
			"key": "conversation_id",
			"value": "",
			"type": "string",
			"description": "Conversation ID for chat continuity"
		}
	]
}
